; generated by Component: ARM Compiler 5.06 update 1 (build 61) Tool: ArmCC [4d35ad]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -ogsm_stm32f103\event_system.o --asm_dir=..\..\list\ --list_dir=..\..\list\ --depend=gsm_stm32f103\event_system.d --cpu=Cortex-M3 --apcs=interwork -O1 --diag_suppress=9931 -I../Inc -I../Drivers/STM32F1xx_HAL_Driver/Inc -I../Drivers/STM32F1xx_HAL_Driver/Inc/Legacy -I../Drivers/CMSIS/Device/ST/STM32F1xx/Include -I../Drivers/CMSIS/Include -I..\Hardware\SSD1306 -I..\Hardware\delay -I..\Hardware\GSM_LIB\GENERAL -I..\Hardware\GSM_LIB\USART -I../Middlewares/Third_Party/FreeRTOS/Source/portable/RVDS/ARM_CM3 -I../Middlewares/Third_Party/FreeRTOS/Source/include -I../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS -IE:\MC\2.STM32\STMProjects\GSM\M590\Project\Keil\gsm_stm32f103\MDK-ARM\RTE -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\Include -IC:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\2.1.0\Device\Include -D__MICROLIB -D__UVISION_VERSION=517 -D_RTE_ -DSTM32F10X_MD -DUSE_HAL_DRIVER -DSTM32F103xB --omf_browse=gsm_stm32f103\event_system.crf ..\Src\event_system.c]
                          THUMB

                          AREA ||i.ES_FlushBuf||, CODE, READONLY, ALIGN=2

                  ES_FlushBuf PROC
;;;20     //"очищает" буфер
;;;21     void ES_FlushBuf(void)
000000  4802              LDR      r0,|L1.12|
;;;22     {
;;;23       tailBuf = 0;
000002  2100              MOVS     r1,#0
000004  7001              STRB     r1,[r0,#0]
;;;24       headBuf = 0;
000006  7041              STRB     r1,[r0,#1]
;;;25       countBuf = 0;
000008  7081              STRB     r1,[r0,#2]
;;;26     }
00000a  4770              BX       lr
;;;27     
                          ENDP

                  |L1.12|
                          DCD      ||.data||

                          AREA ||i.ES_GetCount||, CODE, READONLY, ALIGN=2

                  ES_GetCount PROC
;;;14     //возвращает колличество событий находящихся в буфере
;;;15     uint8_t ES_GetCount(void)
000000  4801              LDR      r0,|L2.8|
;;;16     {
;;;17     	return countBuf;
000002  7880              LDRB     r0,[r0,#2]  ; countBuf
;;;18     }
000004  4770              BX       lr
;;;19     
                          ENDP

000006  0000              DCW      0x0000
                  |L2.8|
                          DCD      ||.data||

                          AREA ||i.ES_GetEvent||, CODE, READONLY, ALIGN=2

                  ES_GetEvent PROC
;;;29     //взять событие
;;;30     pxEventFuncType ES_GetEvent(void)
000000  4a0a              LDR      r2,|L3.44|
;;;31     {
;;;32       pxEventFuncType event;
;;;33       if (countBuf > 0){                        //если приемный буфер не пустой
000002  7890              LDRB     r0,[r2,#2]  ; countBuf
000004  2800              CMP      r0,#0
000006  d00e              BEQ      |L3.38|
;;;34         event = cycleBuf[headBuf];              //считать из него событие
000008  4809              LDR      r0,|L3.48|
00000a  7851              LDRB     r1,[r2,#1]  ; headBuf
00000c  f8500021          LDR      r0,[r0,r1,LSL #2]
;;;35         countBuf--;                             //уменьшить счетчик
000010  7893              LDRB     r3,[r2,#2]  ; countBuf
000012  1e5b              SUBS     r3,r3,#1
000014  7093              STRB     r3,[r2,#2]
;;;36         headBuf++;                              //инкрементировать индекс головы буфера
000016  1c49              ADDS     r1,r1,#1
000018  b2c9              UXTB     r1,r1
00001a  7051              STRB     r1,[r2,#1]
;;;37         if (headBuf == SIZE_BUF) headBuf = 0;
00001c  2920              CMP      r1,#0x20
00001e  d101              BNE      |L3.36|
000020  2100              MOVS     r1,#0
000022  7051              STRB     r1,[r2,#1]
                  |L3.36|
;;;38         return event;                           //вернуть событие
;;;39       }
;;;40       return 0;
;;;41     }
000024  4770              BX       lr
                  |L3.38|
000026  2000              MOVS     r0,#0                 ;40
000028  4770              BX       lr
;;;42     
                          ENDP

00002a  0000              DCW      0x0000
                  |L3.44|
                          DCD      ||.data||
                  |L3.48|
                          DCD      ||.bss||

                          AREA ||i.ES_PlaceEvent||, CODE, READONLY, ALIGN=2

                  ES_PlaceEvent PROC
;;;45     //положить событие
;;;46     void ES_PlaceEvent(pxEventFuncType event)
000000  4a09              LDR      r2,|L4.40|
;;;47     {
;;;48       if (countBuf < SIZE_BUF){                    //если в буфере еще есть место
000002  7891              LDRB     r1,[r2,#2]  ; countBuf
000004  2920              CMP      r1,#0x20
000006  d20d              BCS      |L4.36|
;;;49           cycleBuf[tailBuf] = event;               //кинуть событие в буфер
000008  4b08              LDR      r3,|L4.44|
00000a  7811              LDRB     r1,[r2,#0]  ; tailBuf
00000c  f8430021          STR      r0,[r3,r1,LSL #2]
;;;50           tailBuf++;                               //увеличить индекс хвоста буфера
000010  1c49              ADDS     r1,r1,#1
000012  b2c8              UXTB     r0,r1
000014  7010              STRB     r0,[r2,#0]
;;;51           if (tailBuf == SIZE_BUF) tailBuf = 0;
000016  2820              CMP      r0,#0x20
000018  d101              BNE      |L4.30|
00001a  2000              MOVS     r0,#0
00001c  7010              STRB     r0,[r2,#0]
                  |L4.30|
;;;52           countBuf++;                              //увеличить счетчик
00001e  7890              LDRB     r0,[r2,#2]  ; countBuf
000020  1c40              ADDS     r0,r0,#1
000022  7090              STRB     r0,[r2,#2]
                  |L4.36|
;;;53       }
;;;54     }
000024  4770              BX       lr
;;;55     
                          ENDP

000026  0000              DCW      0x0000
                  |L4.40|
                          DCD      ||.data||
                  |L4.44|
                          DCD      ||.bss||

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  cycleBuf
                          %        128

                          AREA ||.data||, DATA, ALIGN=0

                  tailBuf
000000  00                DCB      0x00
                  headBuf
000001  00                DCB      0x00
                  countBuf
000002  00                DCB      0x00

;*** Start embedded assembler ***

#line 1 "..\\Src\\event_system.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___14_event_system_c_db0fccb7____REV16|
#line 388 "../Drivers/CMSIS/Include/cmsis_armcc.h"
|__asm___14_event_system_c_db0fccb7____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___14_event_system_c_db0fccb7____REVSH|
#line 402
|__asm___14_event_system_c_db0fccb7____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___14_event_system_c_db0fccb7____RRX|
#line 587
|__asm___14_event_system_c_db0fccb7____RRX| PROC
#line 588

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

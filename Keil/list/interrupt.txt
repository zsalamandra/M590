; generated by Component: ARM Compiler 5.06 update 1 (build 61) Tool: ArmCC [4d35ad]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -ogsm_stm32f103\interrupt.o --asm_dir=..\..\list\ --list_dir=..\..\list\ --depend=gsm_stm32f103\interrupt.d --cpu=Cortex-M3 --apcs=interwork -O1 --diag_suppress=9931 -I../Inc -I../Drivers/STM32F1xx_HAL_Driver/Inc -I../Drivers/STM32F1xx_HAL_Driver/Inc/Legacy -I../Drivers/CMSIS/Device/ST/STM32F1xx/Include -I../Drivers/CMSIS/Include -I..\Hardware\SSD1306 -I..\Hardware\delay -I..\Hardware\GSM_LIB\GENERAL -I..\Hardware\GSM_LIB\USART -I../Middlewares/Third_Party/FreeRTOS/Source/portable/RVDS/ARM_CM3 -I../Middlewares/Third_Party/FreeRTOS/Source/include -I../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS -IE:\MC\2.STM32\STMProjects\GSM\GSM_M590\Project\gsm_stm32f103\MDK-ARM\RTE -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\Include -IC:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\2.1.0\Device\Include -D__MICROLIB -D__UVISION_VERSION=517 -D_RTE_ -DSTM32F10X_MD -DUSE_HAL_DRIVER -DSTM32F103xB --omf_browse=gsm_stm32f103\interrupt.crf ..\Src\interrupt.c]
                          THUMB

                          AREA ||i.EXTI15_10_IRQHandler||, CODE, READONLY, ALIGN=1

                  EXTI15_10_IRQHandler PROC
;;;69     
;;;70     void EXTI15_10_IRQHandler(void)
000000  4770              BX       lr
;;;71     {
;;;72     
;;;73     //  HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_13);
;;;74     
;;;75     }
;;;76     
                          ENDP


                          AREA ||i.SysTick_Handler||, CODE, READONLY, ALIGN=1

                  SysTick_Handler PROC
;;;18     */
;;;19     void SysTick_Handler(void)
000000  f7ffbffe          B.W      HAL_IncTick
;;;20     {
;;;21       HAL_IncTick();
;;;22     }
;;;23     
                          ENDP


                          AREA ||i.TIM2_IRQHandler||, CODE, READONLY, ALIGN=2

                  TIM2_IRQHandler PROC
;;;25     
;;;26     void TIM2_IRQHandler(void)
000000  4a08              LDR      r2,|L3.36|
;;;27     {
;;;28     	static uint8_t sec;
;;;29     	sec++;
000002  7810              LDRB     r0,[r2,#0]  ; sec
000004  1c40              ADDS     r0,r0,#1
000006  b2c0              UXTB     r0,r0
000008  7010              STRB     r0,[r2,#0]
;;;30     	
;;;31     	if (sec%60 == 0){
00000a  213c              MOVS     r1,#0x3c
00000c  fbb0f3f1          UDIV     r3,r0,r1
000010  fb010013          MLS      r0,r1,r3,r0
000014  2800              CMP      r0,#0
000016  d103              BNE      |L3.32|
;;;32     		sec = 0;
000018  7010              STRB     r0,[r2,#0]
;;;33     		// положить функцию печати уровня сигнала в буфер диспетчера
;;;34     		ES_PlaceEvent( (pxEventFuncType)EF_PrintSignalLevel );
00001a  4803              LDR      r0,|L3.40|
00001c  f7ffbffe          B.W      ES_PlaceEvent
                  |L3.32|
;;;35     	}
;;;36     }
000020  4770              BX       lr
;;;37     
                          ENDP

000022  0000              DCW      0x0000
                  |L3.36|
                          DCD      ||.data||
                  |L3.40|
                          DCD      EF_PrintSignalLevel

                          AREA ||i.TIM4_IRQHandler||, CODE, READONLY, ALIGN=2

                  TIM4_IRQHandler PROC
;;;46       */
;;;47     void TIM4_IRQHandler(void)
000000  4812              LDR      r0,|L4.76|
;;;48     {
;;;49       static volatile uint16_t Value_Prev = 0; 
;;;50       static volatile uint16_t Value = 0; 
;;;51       // Если сработало прерывание 4 канала  
;;;52       if IS_BIT_SET(TIM4->SR, TIM_IT_CC4){
000002  6801              LDR      r1,[r0,#0]
000004  06c9              LSLS     r1,r1,#27
000006  d51f              BPL      |L4.72|
;;;53           // очистка бита "сработало прерывание 4го канала"
;;;54           CLEAR_BIT(TIM4->SR, TIM_IT_CC4);
000008  6801              LDR      r1,[r0,#0]
00000a  f0210110          BIC      r1,r1,#0x10
00000e  6001              STR      r1,[r0,#0]
;;;55           
;;;56           Value_Prev = Value;
000010  480f              LDR      r0,|L4.80|
000012  8881              LDRH     r1,[r0,#4]  ; Value
000014  8041              STRH     r1,[r0,#2]
;;;57           Value = TIM4->CCR4;
000016  490d              LDR      r1,|L4.76|
000018  3130              ADDS     r1,r1,#0x30
00001a  6809              LDR      r1,[r1,#0]
00001c  8081              STRH     r1,[r0,#4]
;;;58           uint16_t duration = (Value >= Value_Prev) ? (Value - Value_Prev) : \
00001e  8881              LDRH     r1,[r0,#4]  ; Value
000020  8842              LDRH     r2,[r0,#2]  ; Value_Prev
000022  4291              CMP      r1,r2
000024  d303              BCC      |L4.46|
000026  8881              LDRH     r1,[r0,#4]  ; Value
000028  8840              LDRH     r0,[r0,#2]  ; Value_Prev
00002a  1a08              SUBS     r0,r1,r0
00002c  e005              B        |L4.58|
                  |L4.46|
;;;59           (UINT16_MAX - Value_Prev + Value);
00002e  8841              LDRH     r1,[r0,#2]  ; Value_Prev
000030  f64f72ff          MOV      r2,#0xffff
000034  8880              LDRH     r0,[r0,#4]  ; Value
000036  1a51              SUBS     r1,r2,r1
000038  4408              ADD      r0,r0,r1
                  |L4.58|
00003a  b280              UXTH     r0,r0
;;;60           
;;;61           if ( (duration > 30) && (duration < 35)){
00003c  381f              SUBS     r0,r0,#0x1f
00003e  2804              CMP      r0,#4
000040  d202              BCS      |L4.72|
;;;62             // положить функцию печати уровня сигнала в буфер диспетчера
;;;63     				ES_PlaceEvent( (pxEventFuncType)EF_PrintSignalLevel );
000042  4804              LDR      r0,|L4.84|
000044  f7ffbffe          B.W      ES_PlaceEvent
                  |L4.72|
;;;64           }
;;;65             
;;;66           
;;;67       }
;;;68     }
000048  4770              BX       lr
;;;69     
                          ENDP

00004a  0000              DCW      0x0000
                  |L4.76|
                          DCD      0x40000810
                  |L4.80|
                          DCD      ||.data||
                  |L4.84|
                          DCD      EF_PrintSignalLevel

                          AREA ||.data||, DATA, ALIGN=1

                  ||sec||
000000  0000              DCB      0x00,0x00
                  Value_Prev
000002  0000              DCW      0x0000
                  Value
000004  0000              DCW      0x0000

;*** Start embedded assembler ***

#line 1 "..\\Src\\interrupt.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___11_interrupt_c_b672aa62____REV16|
#line 388 "../Drivers/CMSIS/Include/cmsis_armcc.h"
|__asm___11_interrupt_c_b672aa62____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___11_interrupt_c_b672aa62____REVSH|
#line 402
|__asm___11_interrupt_c_b672aa62____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___11_interrupt_c_b672aa62____RRX|
#line 587
|__asm___11_interrupt_c_b672aa62____RRX| PROC
#line 588

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

; generated by Component: ARM Compiler 5.06 update 1 (build 61) Tool: ArmCC [4d35ad]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -ogsm_stm32f103\tim.o --asm_dir=..\..\list\ --list_dir=..\..\list\ --depend=gsm_stm32f103\tim.d --cpu=Cortex-M3 --apcs=interwork -O1 --diag_suppress=9931 -I../Inc -I../Drivers/STM32F1xx_HAL_Driver/Inc -I../Drivers/STM32F1xx_HAL_Driver/Inc/Legacy -I../Drivers/CMSIS/Device/ST/STM32F1xx/Include -I../Drivers/CMSIS/Include -I..\Hardware\SSD1306 -I..\Hardware\delay -I..\Hardware\GSM_LIB\GENERAL -I..\Hardware\GSM_LIB\USART -I../Middlewares/Third_Party/FreeRTOS/Source/portable/RVDS/ARM_CM3 -I../Middlewares/Third_Party/FreeRTOS/Source/include -I../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS -IE:\MC\2.STM32\STMProjects\GSM\GSM_M590\Project\gsm_stm32f103\MDK-ARM\RTE -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\Include -IC:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\2.1.0\Device\Include -D__MICROLIB -D__UVISION_VERSION=517 -D_RTE_ -DSTM32F10X_MD -DUSE_HAL_DRIVER -DSTM32F103xB --omf_browse=gsm_stm32f103\tim.crf ../Src/tim.c]
                          THUMB

                          AREA ||i.HAL_TIM_Base_MspDeInit||, CODE, READONLY, ALIGN=2

                  HAL_TIM_Base_MspDeInit PROC
;;;112    
;;;113    void HAL_TIM_Base_MspDeInit(TIM_HandleTypeDef* tim_baseHandle)
000000  6800              LDR      r0,[r0,#0]
;;;114    {
;;;115    
;;;116      if(tim_baseHandle->Instance==TIM2)
000002  f1b04f80          CMP      r0,#0x40000000
000006  d107              BNE      |L1.24|
;;;117      {
;;;118      /* USER CODE BEGIN TIM2_MspDeInit 0 */
;;;119    
;;;120      /* USER CODE END TIM2_MspDeInit 0 */
;;;121        /* Peripheral clock disable */
;;;122        __HAL_RCC_TIM2_CLK_DISABLE();
000008  4804              LDR      r0,|L1.28|
00000a  69c1              LDR      r1,[r0,#0x1c]
00000c  f0210101          BIC      r1,r1,#1
000010  61c1              STR      r1,[r0,#0x1c]
;;;123    
;;;124        /* TIM2 interrupt Deinit */
;;;125        HAL_NVIC_DisableIRQ(TIM2_IRQn);
000012  201c              MOVS     r0,#0x1c
000014  f7ffbffe          B.W      HAL_NVIC_DisableIRQ
                  |L1.24|
;;;126      /* USER CODE BEGIN TIM2_MspDeInit 1 */
;;;127    
;;;128      /* USER CODE END TIM2_MspDeInit 1 */
;;;129      }
;;;130    } 
000018  4770              BX       lr
;;;131    
                          ENDP

00001a  0000              DCW      0x0000
                  |L1.28|
                          DCD      0x40021000

                          AREA ||i.HAL_TIM_Base_MspInit||, CODE, READONLY, ALIGN=2

                  HAL_TIM_Base_MspInit PROC
;;;92     
;;;93     void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* tim_baseHandle)
000000  b508              PUSH     {r3,lr}
;;;94     {
;;;95     
;;;96       if(tim_baseHandle->Instance==TIM2)
000002  6800              LDR      r0,[r0,#0]
000004  f1b04f80          CMP      r0,#0x40000000
000008  d112              BNE      |L2.48|
;;;97       {
;;;98       /* USER CODE BEGIN TIM2_MspInit 0 */
;;;99     
;;;100      /* USER CODE END TIM2_MspInit 0 */
;;;101        /* TIM2 clock enable */
;;;102        __HAL_RCC_TIM2_CLK_ENABLE();
00000a  480a              LDR      r0,|L2.52|
00000c  69c1              LDR      r1,[r0,#0x1c]
00000e  f0410101          ORR      r1,r1,#1
000012  61c1              STR      r1,[r0,#0x1c]
000014  69c0              LDR      r0,[r0,#0x1c]
000016  f0000001          AND      r0,r0,#1
00001a  9000              STR      r0,[sp,#0]
;;;103    
;;;104        /* TIM2 interrupt Init */
;;;105        HAL_NVIC_SetPriority(TIM2_IRQn, 5, 0);
00001c  2200              MOVS     r2,#0
00001e  2105              MOVS     r1,#5
000020  201c              MOVS     r0,#0x1c
000022  f7fffffe          BL       HAL_NVIC_SetPriority
;;;106        HAL_NVIC_EnableIRQ(TIM2_IRQn);
000026  e8bd4008          POP      {r3,lr}
00002a  201c              MOVS     r0,#0x1c
00002c  f7ffbffe          B.W      HAL_NVIC_EnableIRQ
                  |L2.48|
;;;107      /* USER CODE BEGIN TIM2_MspInit 1 */
;;;108    
;;;109      /* USER CODE END TIM2_MspInit 1 */
;;;110      }
;;;111    }
000030  bd08              POP      {r3,pc}
;;;112    
                          ENDP

000032  0000              DCW      0x0000
                  |L2.52|
                          DCD      0x40021000

                          AREA ||i.MX_TIM2_Init||, CODE, READONLY, ALIGN=2

                  MX_TIM2_Init PROC
;;;59     /* TIM2 init function */
;;;60     void MX_TIM2_Init(void)
000000  b510              PUSH     {r4,lr}
;;;61     {
000002  b086              SUB      sp,sp,#0x18
;;;62       TIM_ClockConfigTypeDef sClockSourceConfig;
;;;63       TIM_MasterConfigTypeDef sMasterConfig;
;;;64     
;;;65       htim2.Instance = TIM2;
000004  4818              LDR      r0,|L3.104|
000006  f04f4180          MOV      r1,#0x40000000
00000a  6001              STR      r1,[r0,#0]  ; htim2
;;;66       htim2.Init.Prescaler = 36000;
00000c  f64841a0          MOV      r1,#0x8ca0
000010  6041              STR      r1,[r0,#4]  ; htim2
;;;67       htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
000012  2400              MOVS     r4,#0
000014  6084              STR      r4,[r0,#8]  ; htim2
;;;68       htim2.Init.Period = 1999;
000016  f24071cf          MOV      r1,#0x7cf
00001a  60c1              STR      r1,[r0,#0xc]  ; htim2
;;;69       htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
00001c  6104              STR      r4,[r0,#0x10]  ; htim2
;;;70       htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
00001e  6184              STR      r4,[r0,#0x18]  ; htim2
;;;71       if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
000020  f7fffffe          BL       HAL_TIM_Base_Init
000024  b118              CBZ      r0,|L3.46|
;;;72       {
;;;73         _Error_Handler(__FILE__, __LINE__);
000026  2149              MOVS     r1,#0x49
000028  a010              ADR      r0,|L3.108|
00002a  f7fffffe          BL       _Error_Handler
                  |L3.46|
;;;74       }
;;;75     
;;;76       sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
00002e  f44f5080          MOV      r0,#0x1000
000032  9002              STR      r0,[sp,#8]
;;;77       if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
000034  a902              ADD      r1,sp,#8
000036  480c              LDR      r0,|L3.104|
000038  f7fffffe          BL       HAL_TIM_ConfigClockSource
00003c  b118              CBZ      r0,|L3.70|
;;;78       {
;;;79         _Error_Handler(__FILE__, __LINE__);
00003e  214f              MOVS     r1,#0x4f
000040  a00a              ADR      r0,|L3.108|
000042  f7fffffe          BL       _Error_Handler
                  |L3.70|
;;;80       }
;;;81     
;;;82       sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
000046  9400              STR      r4,[sp,#0]
;;;83       sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
000048  9401              STR      r4,[sp,#4]
;;;84       if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
00004a  4669              MOV      r1,sp
00004c  4806              LDR      r0,|L3.104|
00004e  f7fffffe          BL       HAL_TIMEx_MasterConfigSynchronization
000052  b118              CBZ      r0,|L3.92|
;;;85       {
;;;86         _Error_Handler(__FILE__, __LINE__);
000054  2156              MOVS     r1,#0x56
000056  a005              ADR      r0,|L3.108|
000058  f7fffffe          BL       _Error_Handler
                  |L3.92|
;;;87       }
;;;88     	
;;;89     	HAL_TIM_Base_Start_IT(&htim2);
00005c  4802              LDR      r0,|L3.104|
00005e  f7fffffe          BL       HAL_TIM_Base_Start_IT
;;;90     
;;;91     }
000062  b006              ADD      sp,sp,#0x18
000064  bd10              POP      {r4,pc}
;;;92     
                          ENDP

000066  0000              DCW      0x0000
                  |L3.104|
                          DCD      ||.bss||
                  |L3.108|
00006c  2e2e2f53          DCB      "../Src/tim.c",0
000070  72632f74
000074  696d2e63
000078  00      
000079  00                DCB      0
00007a  00                DCB      0
00007b  00                DCB      0

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  htim2
                          %        64

;*** Start embedded assembler ***

#line 1 "../Src/tim.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___5_tim_c_d738263a____REV16|
#line 388 "../Drivers/CMSIS/Include/cmsis_armcc.h"
|__asm___5_tim_c_d738263a____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___5_tim_c_d738263a____REVSH|
#line 402
|__asm___5_tim_c_d738263a____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___5_tim_c_d738263a____RRX|
#line 587
|__asm___5_tim_c_d738263a____RRX| PROC
#line 588

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
